@base = http://localhost:5102/api/users
@admin = Admin
@user  = user1

### 1. Создание администратора (роль Admin) → 200
POST {{base}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "login": "admin1",
  "password": "Pass@123",
  "name": "Administrator",
  "gender": 2,
  "birthday": null,
  "admin": true
}
> HTTP/1.1 200

### 2. Создание пользователя (роль User) → 200
POST {{base}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "login": "user1",
  "password": "Pass@123",
  "name": "User One",
  "gender": 1,
  "birthday": "1995-07-20T00:00:00",
  "admin": false
}
> HTTP/1.1 200

### 3. Изменение профиля пользователя (от администратора) → 200
PUT {{base}}/profile/{{user}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "newName": "Иван",
  "newGender": 1,
  "newBirthday": "1990-05-20T00:00:00"
}
> HTTP/1.1 200

### 4. Изменение своего профиля (от пользователя) → 200
PUT {{base}}/profile/{{user}}
X-Current-User: {{user}}
Content-Type: application/json

{
  "newName": "Пётр",
  "newGender": 1,
  "newBirthday": "1992-08-15T00:00:00"
}
> HTTP/1.1 200

### 5. Смена пароля пользователя (от администратора) → 200
PUT {{base}}/password/{{user}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "oldPassword": "Pass@123",
  "newPassword": "AdminNew@123"
}
> HTTP/1.1 200

### 6. Смена своего пароля (от пользователя) → 200
PUT {{base}}/password/{{user}}
X-Current-User: {{user}}
Content-Type: application/json

{
  "oldPassword": "Pass@123",
  "newPassword": "UserNew@123"
}
> HTTP/1.1 200

### 7. Смена логина пользователя (от администратора) → 200
PUT {{base}}/login/{{user}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "newLogin": "user1_admin"
}
> HTTP/1.1 200

### 8. Смена своего логина (от пользователя) → 200
PUT {{base}}/login/{{user}}
X-Current-User: {{user}}
Content-Type: application/json

{
  "newLogin": "user1_self"
}
> HTTP/1.1 200

### 9. Получение всех активных пользователей (от администратора) → 200
GET {{base}}
X-Current-User: {{admin}}

### 10. Получение пользователя по логину (от администратора) → 200
GET {{base}}/{{user}}
X-Current-User: {{admin}}

### 11. Аутентификация пользователя (получение себя по логину и паролю) → 200
GET {{base}}/authenticate?login={{user}}&password=UserNew@123

### 12. Получение пользователей старше 30 лет (от администратора) → 200
GET {{base}}/older-than/30
X-Current-User: {{admin}}

### 13. Мягкое удаление пользователя (от администратора) → 200
DELETE {{base}}/{{user}}
X-Current-User: {{admin}}

### 14. Восстановление пользователя (от администратора) → 200
PUT {{base}}/restore/{{user}}
X-Current-User: {{admin}}

### 15. Полное удаление пользователя (от администратора) → 200
DELETE {{base}}/{{user}}?hard=true
X-Current-User: {{admin}}


### A. Создание без обязательных полей → 400
POST {{base}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "login": "",
  "password": "",
  "name": "",
  "gender": 5,
  "birthday": "not-a-date",
  "admin": false
}
> HTTP/1.1 400

### B. Создание с дублирующимся логином → 409
POST {{base}}
X-Current-User: {{admin}}
Content-Type: application/json

{
  "login": "admin1",
  "password": "Admin123",
  "name": "Administrator",
  "gender": 2,
  "birthday": null,
  "admin": true
}
> HTTP/1.1 409

### C. Обновление профиля несуществующего пользователя → 404
PUT {{base}}/profile/unknown
X-Current-User: {{admin}}
Content-Type: application/json

{
  "newName": "NoUser"
}
> HTTP/1.1 404

### D. Смена пароля с неверным старым паролем → 400
PUT {{base}}/password/{{user}}
X-Current-User: {{user}}
Content-Type: application/json

{
  "oldPassword": "Wrong",
  "newPassword": "NewPass1"
}
> HTTP/1.1 400

### E. Смена логина на пустой → 400
PUT {{base}}/login/{{user}}
X-Current-User: {{user}}
Content-Type: application/json

{
  "newLogin": ""
}
> HTTP/1.1 400

### F. Чтение списка без прав Admin → 403
GET {{base}}
X-Current-User: {{user}}

### G. Чтение чужого профиля без Admin → 403
GET {{base}}/admin1
X-Current-User: {{user}}

### H. Аутентификация удалённого пользователя → 401
# Сначала мягко удаляем
DELETE {{base}}/user1_self
X-Current-User: {{admin}}

# Затем запрос аутентификации
GET {{base}}/authenticate?login=user1_self&password=UserNew@123

### I. Запрос старше отрицательного возраста → 400
GET {{base}}/older-than/-5
X-Current-User: {{admin}}

### J. Полное удаление несуществующего → 404
DELETE {{base}}/unknown?hard=true
X-Current-User: {{admin}}

### K. Восстановление несуществующего → 404
PUT {{base}}/restore/unknown
X-Current-User: {{admin}}
